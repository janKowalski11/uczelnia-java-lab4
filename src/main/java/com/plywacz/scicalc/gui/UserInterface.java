/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.plywacz.scicalc.gui;

import com.plywacz.scicalc.calcmethods.Calculable;
import com.plywacz.scicalc.calcmethods.TrigonometryMethods;
import com.plywacz.scicalc.calcmethods.TrigonometryMethodsService;
import com.plywacz.scicalc.enums.CalcOperation;
import com.plywacz.scicalc.model.MethodModel;
import java.awt.AWTEvent;
import java.awt.event.ActionEvent;
import java.rmi.UnexpectedException;
import java.text.MessageFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import sun.applet.Main;

/**
 *
 * @author BeGieU
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public UserInterface() {

        listModel = new DefaultListModel<>();
        listModel.add(0, new MethodModel("Sinus", "sin(x)"));
        listModel.add(1, new MethodModel("Cosinus", "cos(x)"));
        listModel.add(2, new MethodModel("Tangens", "tan(x)"));
        listModel.add(3, new MethodModel("Cotangens", "ctan(x)"));
        listModel.add(4, new MethodModel("secant", "sec(x)"));
        listModel.add(5, new MethodModel("Pi", "pi"));
        listModel.add(6, new MethodModel("Golden ratio", "[phi]"));
        listModel.add(7, new MethodModel("Euler's Number", "e"));
        listModel.add(8, new MethodModel("Addition", "a + b"));
        listModel.add(9, new MethodModel("Multiplication", "a * b"));
        listModel.add(10, new MethodModel("Exponentiation", "a ^ b"));

        
        trigonometryService = new TrigonometryMethodsService();

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        evalBtn = new javax.swing.JButton();
        listScrollPane = new javax.swing.JScrollPane();
        funcList = new javax.swing.JList();
        formulaInputTextField = new javax.swing.JTextField();
        textAreaScrollPane = new javax.swing.JScrollPane();
        historyTextArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        resetMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SciCalc");
        setMinimumSize(new java.awt.Dimension(400, 400));

        evalBtn.setText("Evaluate");
        evalBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                evalBtnMousePressed(evt);
            }
        });

        funcList.setModel(listModel);
        funcList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        funcList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                funcListMousePressed(evt);
            }
        });
        listScrollPane.setViewportView(funcList);

        formulaInputTextField.setText("sin(x)");
        formulaInputTextField.setToolTipText("");
        formulaInputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formulaInputTextFieldActionPerformed(evt);
            }
        });

        historyTextArea.setEditable(false);
        historyTextArea.setColumns(20);
        historyTextArea.setRows(5);
        textAreaScrollPane.setViewportView(historyTextArea);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAreaScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addComponent(formulaInputTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(evalBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                    .addComponent(textAreaScrollPane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formulaInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        menu.setText("Options");

        resetMenuItem.setText("Reset");
        resetMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                resetMenuItemMousePressed(evt);
            }
        });
        menu.add(resetMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitMenuItemMousePressed(evt);
            }
        });
        menu.add(exitMenuItem);

        menuBar.add(menu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMenuItemMousePressed
        historyTextArea.setText(null);
        formulaInputTextField.setText(null);

    }//GEN-LAST:event_resetMenuItemMousePressed

    private void exitMenuItemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuItemMousePressed
        this.dispose();
    }//GEN-LAST:event_exitMenuItemMousePressed

    //handles calc operation choosing
    private void funcListMousePressed(java.awt.event.MouseEvent evt)  {//GEN-FIRST:event_funcListMousePressed
        JList clickedList = (JList) evt.getSource();

        //does an action only when you double click on the list element
        if (evt.getClickCount() == 2) {
            int clickedItemIndex = clickedList.locationToIndex(evt.getPoint());

            Object selectedItem = clickedList.getModel().getElementAt(clickedItemIndex);

            MethodModel methodItem=null;
            if (selectedItem instanceof MethodModel) {
                 methodItem = (MethodModel) selectedItem;
            }else{
                //TODO throw exception 
                //throw new UnexpectedException(clickedList +" list contains wrong items !!!");
            }

            formulaInputTextField.setText(methodItem.getValue());
        }
    }//GEN-LAST:event_funcListMousePressed

    private String getFormattedMsg(String formula, Double result) {

        String msg = MessageFormat.format(
                " {0} \t {1} = {2} \n",
                new Date(), formula, result);

        return msg;
    }

    private void handleEvalButtonAndEnterPressed() {
        String formula = formulaInputTextField.getText();

        try {
            Double res = trigonometryService.calculate(formula);
            if (res != null) {
                historyTextArea.append(getFormattedMsg(formula, res));
                formulaInputTextField.setText(null);
            }
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, "Wrong formula given\n  "
                    + formula
                    + "   just replace symbols (a,b,x)  with number value i.e sin(x) replace with (sin2)\n"
                    + "a + b replace with 2 + 3, remember to keep white spaces :)");
        }
    }

    //starts when enter is pressed
    private void formulaInputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formulaInputTextFieldActionPerformed

        handleEvalButtonAndEnterPressed();

    }//GEN-LAST:event_formulaInputTextFieldActionPerformed

    private void evalBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evalBtnMousePressed

        handleEvalButtonAndEnterPressed();
    }//GEN-LAST:event_evalBtnMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    private final Calculable trigonometryService;
    private DefaultListModel<MethodModel> listModel;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton evalBtn;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JTextField formulaInputTextField;
    private javax.swing.JList funcList;
    private javax.swing.JTextArea historyTextArea;
    private javax.swing.JScrollPane listScrollPane;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenu menu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem resetMenuItem;
    private javax.swing.JScrollPane textAreaScrollPane;
    // End of variables declaration//GEN-END:variables

}
